apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
name: total-request-hpa
labels:
  deploymentName: acme-complains
spec:
  minReplicaCount: 1
  maxReplicaCount: 3
  pollingInterval: 3 # Optional. Default: 30 seconds
  cooldownPeriod: 5 # Optional. Default: 300 seconds
scaleTargetRef:
  deploymentName: acme-complains
triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-k8s.monitoring.svc:9090
      metricName: http_requests_total
      query: sum(rate(http_requests_total{deployment="acme-complains"}[2m])) 
      threshold: 75
  # - type: prometheus
  #   metadata:
  #     # Required fields:
  #     serverAddress: http://<prometheus-host>:9090
  #     metricName: http_requests_total # DEPRECATED: This parameter is deprecated as of KEDA v2.10 and will be removed in version 2.12. Note: name to identify the metric, generated value would be `prometheus-http_requests_total`
  #     query: sum(rate(http_requests_total{deployment="my-deployment"}[2m])) # Note: query must return a vector/scalar single element response
  #     threshold: '100.50'
  #     activationThreshold: '5.5'
  #     # Optional fields:
  #     namespace: example-namespace  # for namespaced queries, eg. Thanos
  #     cortexOrgID: my-org # DEPRECATED: This parameter is deprecated as of KEDA v2.10 in favor of customHeaders and will be removed in version 2.12. Use custom headers instead to set X-Scope-OrgID header for Cortex. (see below)
  #     customHeaders: X-Client-Id=cid,X-Tenant-Id=tid,X-Organization-Id=oid # Optional. Custom headers to include in query. In case of auth header, use the custom authentication or relevant authModes.
  #     ignoreNullValues: false # Default is `true`, which means ignoring the empty value list from Prometheus. Set to `false` the scaler will return error when Prometheus target is lost
  #     unsafeSsl: "false" #  Default is `false`, Used for skipping certificate check when having self signed certs for Prometheus endpoint    